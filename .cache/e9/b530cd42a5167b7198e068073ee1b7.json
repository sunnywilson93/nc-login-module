{"id":"../node_modules/read-excel-file/modules/read/parseDimensions.js","dependencies":[{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseDimensions.js.map","includedInParent":true,"mtime":1653311175967},{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/package.json","includedInParent":true,"mtime":1653376157709},{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/package.json","includedInParent":true,"mtime":1653311175967},{"name":"./coordinates.js","loc":{"line":13,"column":37,"index":1581},"parent":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseDimensions.js","resolved":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/coordinates.js"},{"name":"../xml/xlsx.js","loc":{"line":14,"column":30,"index":1631},"parent":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseDimensions.js","resolved":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/xml/xlsx.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseDimensions;\n\nvar _coordinates = require(\"./coordinates.js\");\n\nvar _xlsx = require(\"../xml/xlsx.js\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\n// `dimensions` defines the spreadsheet area containing all non-empty cells.\n// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\nfunction parseDimensions(sheet) {\n  var dimensions = (0, _xlsx.getDimensions)(sheet);\n\n  if (dimensions) {\n    dimensions = dimensions.split(':').map(_coordinates.parseCellCoordinates).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          row = _ref2[0],\n          column = _ref2[1];\n\n      return {\n        row: row,\n        column: column\n      };\n    }); // Sometimes there can be just a single cell as a spreadsheet's \"dimensions\".\n    // For example, the default \"dimensions\" in Apache POI library is \"A1\",\n    // meaning that only the first cell in the spreadsheet is used.\n    //\n    // A quote from Apache POI library:\n    // \"Single cell ranges are formatted like single cell references (e.g. 'A1' instead of 'A1:A1').\"\n    //\n\n    if (dimensions.length === 1) {\n      dimensions = [dimensions[0], dimensions[0]];\n    }\n\n    return dimensions;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":9,"column":0},"generated":{"line":73,"column":0}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":10,"column":0},"generated":{"line":74,"column":0}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":11,"column":15},"generated":{"line":75,"column":0}},{"source":"../../source/read/parseDimensions.js","name":"parseDimensions","original":{"line":11,"column":24},"generated":{"line":75,"column":9}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":11,"column":15},"generated":{"line":75,"column":24}},{"source":"../../source/read/parseDimensions.js","name":"sheet","original":{"line":11,"column":40},"generated":{"line":75,"column":25}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":11,"column":15},"generated":{"line":75,"column":30}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":11,"column":47},"generated":{"line":75,"column":32}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":12,"column":2},"generated":{"line":76,"column":2}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":12,"column":6},"generated":{"line":76,"column":6}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":12,"column":16},"generated":{"line":76,"column":16}},{"source":"../../source/read/parseDimensions.js","name":"getDimensions","original":{"line":12,"column":19},"generated":{"line":76,"column":19}},{"source":"../../source/read/parseDimensions.js","name":"getDimensions","original":{"line":12,"column":19},"generated":{"line":76,"column":23}},{"source":"../../source/read/parseDimensions.js","name":"getDimensions","original":{"line":12,"column":19},"generated":{"line":76,"column":42}},{"source":"../../source/read/parseDimensions.js","name":"sheet","original":{"line":12,"column":33},"generated":{"line":76,"column":44}},{"source":"../../source/read/parseDimensions.js","name":"getDimensions","original":{"line":12,"column":19},"generated":{"line":76,"column":49}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":12,"column":2},"generated":{"line":76,"column":50}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":13,"column":2},"generated":{"line":78,"column":2}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":13,"column":6},"generated":{"line":78,"column":6}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":13,"column":2},"generated":{"line":78,"column":16}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":13,"column":18},"generated":{"line":78,"column":18}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":4},"generated":{"line":79,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":14},"generated":{"line":79,"column":14}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":17},"generated":{"line":79,"column":17}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":27},"generated":{"line":79,"column":27}},{"source":"../../source/read/parseDimensions.js","name":"split","original":{"line":14,"column":28},"generated":{"line":79,"column":28}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":17},"generated":{"line":79,"column":33}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":34},"generated":{"line":79,"column":34}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":17},"generated":{"line":79,"column":37}},{"source":"../../source/read/parseDimensions.js","name":"map","original":{"line":14,"column":39},"generated":{"line":79,"column":39}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":17},"generated":{"line":79,"column":42}},{"source":"../../source/read/parseDimensions.js","name":"parseCellCoordinates","original":{"line":14,"column":43},"generated":{"line":79,"column":43}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":17},"generated":{"line":79,"column":76}},{"source":"../../source/read/parseDimensions.js","name":"map","original":{"line":14,"column":65},"generated":{"line":79,"column":78}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":17},"generated":{"line":79,"column":81}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":79,"column":82}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":79,"column":92}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":79,"column":96}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":79,"column":98}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":6}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":10}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":15}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":18}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":32}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":33}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":37}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":39}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":40}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":80,"column":41}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":81,"column":6}},{"source":"../../source/read/parseDimensions.js","name":"row","original":{"line":14,"column":71},"generated":{"line":81,"column":10}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":81,"column":13}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":81,"column":16}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":81,"column":21}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":81,"column":22}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":81,"column":23}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":81,"column":24}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":82,"column":6}},{"source":"../../source/read/parseDimensions.js","name":"column","original":{"line":14,"column":76},"generated":{"line":82,"column":10}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":82,"column":16}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":82,"column":19}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":82,"column":24}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":82,"column":25}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":82,"column":26}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":82,"column":27}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":84,"column":6}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":89},"generated":{"line":84,"column":13}},{"source":"../../source/read/parseDimensions.js","name":"row","original":{"line":15,"column":6},"generated":{"line":85,"column":8}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":15,"column":9},"generated":{"line":85,"column":11}},{"source":"../../source/read/parseDimensions.js","name":"row","original":{"line":15,"column":6},"generated":{"line":85,"column":13}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":89},"generated":{"line":85,"column":16}},{"source":"../../source/read/parseDimensions.js","name":"column","original":{"line":16,"column":6},"generated":{"line":86,"column":8}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":16,"column":12},"generated":{"line":86,"column":14}},{"source":"../../source/read/parseDimensions.js","name":"column","original":{"line":16,"column":6},"generated":{"line":86,"column":16}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":89},"generated":{"line":87,"column":6}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":69},"generated":{"line":87,"column":7}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":14,"column":17},"generated":{"line":88,"column":4}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":17},"generated":{"line":88,"column":5}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":14,"column":4},"generated":{"line":88,"column":6}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":13,"column":18},"generated":{"line":88,"column":7}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":18,"column":4},"generated":{"line":88,"column":8}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":19,"column":4},"generated":{"line":89,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":20,"column":4},"generated":{"line":90,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":21,"column":4},"generated":{"line":91,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":22,"column":4},"generated":{"line":92,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":23,"column":4},"generated":{"line":93,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":24,"column":4},"generated":{"line":94,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":25,"column":4},"generated":{"line":96,"column":4}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":25,"column":8},"generated":{"line":96,"column":8}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":25,"column":18},"generated":{"line":96,"column":18}},{"source":"../../source/read/parseDimensions.js","name":"length","original":{"line":25,"column":19},"generated":{"line":96,"column":19}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":25,"column":8},"generated":{"line":96,"column":25}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":25,"column":30},"generated":{"line":96,"column":30}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":25,"column":4},"generated":{"line":96,"column":31}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":25,"column":33},"generated":{"line":96,"column":33}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":26,"column":6},"generated":{"line":97,"column":6}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":16},"generated":{"line":97,"column":16}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":19},"generated":{"line":97,"column":19}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":26,"column":20},"generated":{"line":97,"column":20}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":30},"generated":{"line":97,"column":30}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":31},"generated":{"line":97,"column":31}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":30},"generated":{"line":97,"column":32}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":19},"generated":{"line":97,"column":33}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":26,"column":35},"generated":{"line":97,"column":35}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":45},"generated":{"line":97,"column":45}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":46},"generated":{"line":97,"column":46}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":45},"generated":{"line":97,"column":47}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":26,"column":19},"generated":{"line":97,"column":48}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":26,"column":6},"generated":{"line":97,"column":49}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":27,"column":5},"generated":{"line":98,"column":4}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":28,"column":4},"generated":{"line":100,"column":4}},{"source":"../../source/read/parseDimensions.js","name":"dimensions","original":{"line":28,"column":11},"generated":{"line":100,"column":11}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":28,"column":4},"generated":{"line":100,"column":21}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":29,"column":3},"generated":{"line":101,"column":2}},{"source":"../../source/read/parseDimensions.js","name":null,"original":{"line":30,"column":1},"generated":{"line":102,"column":0}}],"sources":{"../../source/read/parseDimensions.js":"import {\r\n  parseCellCoordinates\r\n} from './coordinates.js'\r\n\r\nimport {\r\n  getDimensions\r\n} from '../xml/xlsx.js'\r\n\r\n// `dimensions` defines the spreadsheet area containing all non-empty cells.\r\n// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\r\nexport default function parseDimensions(sheet) {\r\n  let dimensions = getDimensions(sheet)\r\n  if (dimensions) {\r\n    dimensions = dimensions.split(':').map(parseCellCoordinates).map(([row, column]) => ({\r\n      row,\r\n      column\r\n    }))\r\n    // Sometimes there can be just a single cell as a spreadsheet's \"dimensions\".\r\n    // For example, the default \"dimensions\" in Apache POI library is \"A1\",\r\n    // meaning that only the first cell in the spreadsheet is used.\r\n    //\r\n    // A quote from Apache POI library:\r\n    // \"Single cell ranges are formatted like single cell references (e.g. 'A1' instead of 'A1:A1').\"\r\n    //\r\n    if (dimensions.length === 1) {\r\n      dimensions = [dimensions[0], dimensions[0]]\r\n    }\r\n    return dimensions\r\n  }\r\n}\r\n\r\n"},"lineCount":null}},"error":null,"hash":"6e75f22306006616ab701ad2dbe17c19","cacheData":{"env":{}}}