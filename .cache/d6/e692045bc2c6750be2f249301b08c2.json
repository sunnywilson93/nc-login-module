{"id":"../node_modules/read-excel-file/modules/read/parseDate.js","dependencies":[{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseDate.js.map","includedInParent":true,"mtime":1653311175967},{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/package.json","includedInParent":true,"mtime":1653376157709},{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/package.json","includedInParent":true,"mtime":1653311175967}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseExcelDate;\n\n// Parses an Excel Date (\"serial\") into a corresponding javascript Date in UTC+0 timezone.\n// (with time equal to 00:00)\n//\n// https://www.pcworld.com/article/3063622/software/mastering-excel-date-time-serial-numbers-networkdays-datevalue-and-more.html\n// \"If you need to calculate dates in your spreadsheets,\n//  Excel uses its own unique system, which it calls Serial Numbers\".\n//\nfunction parseExcelDate(excelSerialDate, options) {\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\n  if (options && options.epoch1904) {\n    excelSerialDate += 1462;\n  } // \"Excel serial date\" is just\n  // the count of days since `01/01/1900`\n  // (seems that it may be even fractional).\n  //\n  // The count of days elapsed\n  // since `01/01/1900` (Excel epoch)\n  // till `01/01/1970` (Unix epoch).\n  // Accounts for leap years\n  // (19 of them, yielding 19 extra days).\n\n\n  var daysBeforeUnixEpoch = 70 * 365 + 19; // An hour, approximately, because a minute\n  // may be longer than 60 seconds, due to \"leap seconds\".\n  //\n  // Still, Javascript `Date` (and UNIX time in general) intentionally\n  // drops the concept of \"leap seconds\" in order to make things simpler.\n  // So it's fine.\n  // https://stackoverflow.com/questions/53019726/where-are-the-leap-seconds-in-javascript\n  //\n  // \"The JavaScript Date object specifically adheres to the concept of Unix Time\n  //  (albeit with higher precision). This is part of the POSIX specification,\n  //  and thus is sometimes called \"POSIX Time\". It does not count leap seconds,\n  //  but rather assumes every day had exactly 86,400 seconds. You can read about\n  //  this in section 20.3.1.1 of the current ECMAScript specification, which states:\n  //\n  //  \"Time is measured in ECMAScript in milliseconds since 01 January, 1970 UTC.\n  //   In time values leap seconds are ignored. It is assumed that there are exactly\n  //   86,400,000 milliseconds per day.\"\n  //\n  //  The fact is, that the unpredictable nature of leap seconds makes them very\n  //  difficult to work with in APIs. One can't generally pass timestamps around\n  //  that need leap seconds tables to be interpreted correctly, and expect that\n  //  one system will interpret them the same as another. For example, while your\n  //  example timestamp 1483228826 is 2017-01-01T00:00:00Z on your system,\n  //  it would be interpreted as 2017-01-01T00:00:26Z on POSIX based systems,\n  //  or systems without leap second tables. So they aren't portable.\n  //  Even on systems that have full updated tables, there's no telling what those\n  //  tables will contain in the future (beyond the 6-month IERS announcement period),\n  //  so I can't produce a future timestamp without risk that it may eventually change.\n  //\n  //  To be clear - to support leap seconds in a programming language, the implementation\n  //  must go out of its way to do so, and must make tradeoffs that are not always acceptable.\n  //  Though there are exceptions, the general position is to not support them - not because\n  //  of any subversion or active countermeasures, but because supporting them properly is much,\n  //  much harder.\"\n  //\n  // https://en.wikipedia.org/wiki/Unix_time#Leap_seconds\n  // https://en.wikipedia.org/wiki/Leap_year\n  // https://en.wikipedia.org/wiki/Leap_second\n  //\n\n  var hour = 60 * 60 * 1000;\n  return new Date(Math.round((excelSerialDate - daysBeforeUnixEpoch) * 24 * hour));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../source/read/parseDate.js","name":null,"original":{"line":1,"column":4},"generated":{"line":8,"column":0}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":2,"column":4},"generated":{"line":9,"column":0}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":0}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":4,"column":4},"generated":{"line":11,"column":0}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":5,"column":4},"generated":{"line":12,"column":0}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":6,"column":4},"generated":{"line":13,"column":0}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":7,"column":4},"generated":{"line":14,"column":0}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":19},"generated":{"line":15,"column":0}},{"source":"../../source/read/parseDate.js","name":"parseExcelDate","original":{"line":8,"column":28},"generated":{"line":15,"column":9}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":19},"generated":{"line":15,"column":23}},{"source":"../../source/read/parseDate.js","name":"excelSerialDate","original":{"line":8,"column":43},"generated":{"line":15,"column":24}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":19},"generated":{"line":15,"column":39}},{"source":"../../source/read/parseDate.js","name":"options","original":{"line":8,"column":60},"generated":{"line":15,"column":41}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":19},"generated":{"line":15,"column":48}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":69},"generated":{"line":15,"column":50}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":10,"column":6},"generated":{"line":17,"column":2}},{"source":"../../source/read/parseDate.js","name":"options","original":{"line":10,"column":10},"generated":{"line":17,"column":6}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":10,"column":17},"generated":{"line":17,"column":13}},{"source":"../../source/read/parseDate.js","name":"options","original":{"line":10,"column":21},"generated":{"line":17,"column":17}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":10,"column":28},"generated":{"line":17,"column":24}},{"source":"../../source/read/parseDate.js","name":"epoch1904","original":{"line":10,"column":29},"generated":{"line":17,"column":25}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":10,"column":6},"generated":{"line":17,"column":34}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":10,"column":40},"generated":{"line":17,"column":36}},{"source":"../../source/read/parseDate.js","name":"excelSerialDate","original":{"line":11,"column":8},"generated":{"line":18,"column":4}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":11,"column":23},"generated":{"line":18,"column":19}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":11,"column":27},"generated":{"line":18,"column":23}},{"source":"../../source/read/parseDate.js","name":"excelSerialDate","original":{"line":11,"column":8},"generated":{"line":18,"column":27}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":69},"generated":{"line":19,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":69},"generated":{"line":19,"column":3}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":14,"column":6},"generated":{"line":19,"column":4}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":15,"column":6},"generated":{"line":20,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":16,"column":6},"generated":{"line":21,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":17,"column":6},"generated":{"line":22,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":18,"column":6},"generated":{"line":23,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":19,"column":6},"generated":{"line":24,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":20,"column":6},"generated":{"line":25,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":21,"column":6},"generated":{"line":26,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":22,"column":6},"generated":{"line":27,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":23,"column":6},"generated":{"line":30,"column":2}},{"source":"../../source/read/parseDate.js","name":"daysBeforeUnixEpoch","original":{"line":23,"column":12},"generated":{"line":30,"column":6}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":23,"column":31},"generated":{"line":30,"column":25}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":23,"column":34},"generated":{"line":30,"column":28}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":23,"column":39},"generated":{"line":30,"column":33}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":23,"column":34},"generated":{"line":30,"column":36}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":23,"column":45},"generated":{"line":30,"column":39}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":23,"column":6},"generated":{"line":30,"column":41}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":8,"column":69},"generated":{"line":30,"column":42}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":25,"column":6},"generated":{"line":30,"column":43}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":26,"column":6},"generated":{"line":31,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":27,"column":6},"generated":{"line":32,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":28,"column":6},"generated":{"line":33,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":29,"column":6},"generated":{"line":34,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":30,"column":6},"generated":{"line":35,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":31,"column":6},"generated":{"line":36,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":32,"column":6},"generated":{"line":37,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":33,"column":6},"generated":{"line":38,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":34,"column":6},"generated":{"line":39,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":35,"column":6},"generated":{"line":40,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":36,"column":6},"generated":{"line":41,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":37,"column":6},"generated":{"line":42,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":39,"column":6},"generated":{"line":44,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":40,"column":6},"generated":{"line":45,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":41,"column":6},"generated":{"line":46,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":42,"column":6},"generated":{"line":47,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":43,"column":6},"generated":{"line":48,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":44,"column":6},"generated":{"line":49,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":45,"column":6},"generated":{"line":50,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":46,"column":6},"generated":{"line":51,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":47,"column":6},"generated":{"line":52,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":48,"column":6},"generated":{"line":53,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":49,"column":6},"generated":{"line":54,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":50,"column":6},"generated":{"line":55,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":51,"column":6},"generated":{"line":56,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":52,"column":6},"generated":{"line":57,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":53,"column":6},"generated":{"line":58,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":54,"column":6},"generated":{"line":59,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":55,"column":6},"generated":{"line":60,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":56,"column":6},"generated":{"line":61,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":57,"column":6},"generated":{"line":62,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":58,"column":6},"generated":{"line":63,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":59,"column":6},"generated":{"line":64,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":60,"column":6},"generated":{"line":65,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":61,"column":6},"generated":{"line":66,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":62,"column":6},"generated":{"line":67,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":63,"column":6},"generated":{"line":68,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":64,"column":6},"generated":{"line":70,"column":2}},{"source":"../../source/read/parseDate.js","name":"hour","original":{"line":64,"column":12},"generated":{"line":70,"column":6}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":64,"column":16},"generated":{"line":70,"column":10}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":64,"column":19},"generated":{"line":70,"column":13}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":64,"column":24},"generated":{"line":70,"column":18}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":64,"column":19},"generated":{"line":70,"column":20}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":64,"column":29},"generated":{"line":70,"column":23}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":64,"column":6},"generated":{"line":70,"column":27}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":6},"generated":{"line":71,"column":2}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":13},"generated":{"line":71,"column":9}},{"source":"../../source/read/parseDate.js","name":"Date","original":{"line":66,"column":17},"generated":{"line":71,"column":13}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":13},"generated":{"line":71,"column":17}},{"source":"../../source/read/parseDate.js","name":"Math","original":{"line":66,"column":22},"generated":{"line":71,"column":18}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":26},"generated":{"line":71,"column":22}},{"source":"../../source/read/parseDate.js","name":"round","original":{"line":66,"column":27},"generated":{"line":71,"column":23}},{"source":"../../source/read/parseDate.js","name":"Math","original":{"line":66,"column":22},"generated":{"line":71,"column":28}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":33},"generated":{"line":71,"column":29}},{"source":"../../source/read/parseDate.js","name":"excelSerialDate","original":{"line":66,"column":34},"generated":{"line":71,"column":30}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":49},"generated":{"line":71,"column":45}},{"source":"../../source/read/parseDate.js","name":"daysBeforeUnixEpoch","original":{"line":66,"column":52},"generated":{"line":71,"column":48}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":33},"generated":{"line":71,"column":67}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":75},"generated":{"line":71,"column":71}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":33},"generated":{"line":71,"column":73}},{"source":"../../source/read/parseDate.js","name":"hour","original":{"line":66,"column":80},"generated":{"line":71,"column":76}},{"source":"../../source/read/parseDate.js","name":"Math","original":{"line":66,"column":22},"generated":{"line":71,"column":80}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":13},"generated":{"line":71,"column":81}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":66,"column":6},"generated":{"line":71,"column":82}},{"source":"../../source/read/parseDate.js","name":null,"original":{"line":67,"column":5},"generated":{"line":72,"column":0}}],"sources":{"../../source/read/parseDate.js":"    // Parses an Excel Date (\"serial\") into a corresponding javascript Date in UTC+0 timezone.\r\n    // (with time equal to 00:00)\r\n    //\r\n    // https://www.pcworld.com/article/3063622/software/mastering-excel-date-time-serial-numbers-networkdays-datevalue-and-more.html\r\n    // \"If you need to calculate dates in your spreadsheets,\r\n    //  Excel uses its own unique system, which it calls Serial Numbers\".\r\n    //\r\n    export default function parseExcelDate(excelSerialDate, options) {\r\n      // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\r\n      if (options && options.epoch1904) {\r\n        excelSerialDate += 1462\r\n      }\r\n\r\n      // \"Excel serial date\" is just\r\n      // the count of days since `01/01/1900`\r\n      // (seems that it may be even fractional).\r\n      //\r\n      // The count of days elapsed\r\n      // since `01/01/1900` (Excel epoch)\r\n      // till `01/01/1970` (Unix epoch).\r\n      // Accounts for leap years\r\n      // (19 of them, yielding 19 extra days).\r\n      const daysBeforeUnixEpoch = 70 * 365 + 19\r\n\r\n      // An hour, approximately, because a minute\r\n      // may be longer than 60 seconds, due to \"leap seconds\".\r\n      //\r\n      // Still, Javascript `Date` (and UNIX time in general) intentionally\r\n      // drops the concept of \"leap seconds\" in order to make things simpler.\r\n      // So it's fine.\r\n      // https://stackoverflow.com/questions/53019726/where-are-the-leap-seconds-in-javascript\r\n      //\r\n      // \"The JavaScript Date object specifically adheres to the concept of Unix Time\r\n      //  (albeit with higher precision). This is part of the POSIX specification,\r\n      //  and thus is sometimes called \"POSIX Time\". It does not count leap seconds,\r\n      //  but rather assumes every day had exactly 86,400 seconds. You can read about\r\n      //  this in section 20.3.1.1 of the current ECMAScript specification, which states:\r\n      //\r\n      //  \"Time is measured in ECMAScript in milliseconds since 01 January, 1970 UTC.\r\n      //   In time values leap seconds are ignored. It is assumed that there are exactly\r\n      //   86,400,000 milliseconds per day.\"\r\n      //\r\n      //  The fact is, that the unpredictable nature of leap seconds makes them very\r\n      //  difficult to work with in APIs. One can't generally pass timestamps around\r\n      //  that need leap seconds tables to be interpreted correctly, and expect that\r\n      //  one system will interpret them the same as another. For example, while your\r\n      //  example timestamp 1483228826 is 2017-01-01T00:00:00Z on your system,\r\n      //  it would be interpreted as 2017-01-01T00:00:26Z on POSIX based systems,\r\n      //  or systems without leap second tables. So they aren't portable.\r\n      //  Even on systems that have full updated tables, there's no telling what those\r\n      //  tables will contain in the future (beyond the 6-month IERS announcement period),\r\n      //  so I can't produce a future timestamp without risk that it may eventually change.\r\n      //\r\n      //  To be clear - to support leap seconds in a programming language, the implementation\r\n      //  must go out of its way to do so, and must make tradeoffs that are not always acceptable.\r\n      //  Though there are exceptions, the general position is to not support them - not because\r\n      //  of any subversion or active countermeasures, but because supporting them properly is much,\r\n      //  much harder.\"\r\n      //\r\n      // https://en.wikipedia.org/wiki/Unix_time#Leap_seconds\r\n      // https://en.wikipedia.org/wiki/Leap_year\r\n      // https://en.wikipedia.org/wiki/Leap_second\r\n      //\r\n      const hour = 60 * 60 * 1000\r\n\r\n      return new Date(Math.round((excelSerialDate - daysBeforeUnixEpoch) * 24 * hour))\r\n    }"},"lineCount":null}},"error":null,"hash":"e137dce3fb9affe4ab631edaf2c1bb53","cacheData":{"env":{}}}