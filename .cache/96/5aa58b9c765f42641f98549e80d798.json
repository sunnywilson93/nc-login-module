{"id":"../node_modules/read-excel-file/modules/read/parseCells.js","dependencies":[{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseCells.js.map","includedInParent":true,"mtime":1653311175967},{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/package.json","includedInParent":true,"mtime":1653376157709},{"name":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/package.json","includedInParent":true,"mtime":1653311175967},{"name":"./parseCell.js","loc":{"line":1,"column":22,"index":22},"parent":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseCells.js","resolved":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseCell.js"},{"name":"../xml/xlsx.js","loc":{"line":2,"column":41,"index":81},"parent":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/read/parseCells.js","resolved":"/Users/nc23203-wilson/Documents/pocs/nc-login-module/node_modules/read-excel-file/modules/xml/xlsx.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseCells;\n\nvar _parseCell = _interopRequireDefault(require(\"./parseCell.js\"));\n\nvar _xlsx = require(\"../xml/xlsx.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseCells(sheet, xml, values, styles, properties, options) {\n  var cells = (0, _xlsx.getCells)(sheet);\n\n  if (cells.length === 0) {\n    return [];\n  } // const mergedCells = getMergedCells(sheet)\n  // for (const mergedCell of mergedCells) {\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\n  // }\n\n\n  return cells.map(function (node) {\n    return (0, _parseCell.default)(node, sheet, xml, values, styles, properties, options);\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../source/read/parseCells.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":0}},{"source":"../../source/read/parseCells.js","name":"parseCells","original":{"line":8,"column":24},"generated":{"line":14,"column":9}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":19}},{"source":"../../source/read/parseCells.js","name":"sheet","original":{"line":8,"column":35},"generated":{"line":14,"column":20}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":25}},{"source":"../../source/read/parseCells.js","name":"xml","original":{"line":8,"column":42},"generated":{"line":14,"column":27}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":30}},{"source":"../../source/read/parseCells.js","name":"values","original":{"line":8,"column":47},"generated":{"line":14,"column":32}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":38}},{"source":"../../source/read/parseCells.js","name":"styles","original":{"line":8,"column":55},"generated":{"line":14,"column":40}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":46}},{"source":"../../source/read/parseCells.js","name":"properties","original":{"line":8,"column":63},"generated":{"line":14,"column":48}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":58}},{"source":"../../source/read/parseCells.js","name":"options","original":{"line":8,"column":75},"generated":{"line":14,"column":60}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":15},"generated":{"line":14,"column":67}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":84},"generated":{"line":14,"column":69}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":9,"column":2},"generated":{"line":15,"column":2}},{"source":"../../source/read/parseCells.js","name":"cells","original":{"line":9,"column":8},"generated":{"line":15,"column":6}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":9,"column":13},"generated":{"line":15,"column":11}},{"source":"../../source/read/parseCells.js","name":"getCells","original":{"line":9,"column":16},"generated":{"line":15,"column":14}},{"source":"../../source/read/parseCells.js","name":"getCells","original":{"line":9,"column":16},"generated":{"line":15,"column":18}},{"source":"../../source/read/parseCells.js","name":"getCells","original":{"line":9,"column":16},"generated":{"line":15,"column":32}},{"source":"../../source/read/parseCells.js","name":"sheet","original":{"line":9,"column":25},"generated":{"line":15,"column":34}},{"source":"../../source/read/parseCells.js","name":"getCells","original":{"line":9,"column":16},"generated":{"line":15,"column":39}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":9,"column":2},"generated":{"line":15,"column":40}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":11,"column":2},"generated":{"line":17,"column":2}},{"source":"../../source/read/parseCells.js","name":"cells","original":{"line":11,"column":6},"generated":{"line":17,"column":6}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":11,"column":11},"generated":{"line":17,"column":11}},{"source":"../../source/read/parseCells.js","name":"length","original":{"line":11,"column":12},"generated":{"line":17,"column":12}},{"source":"../../source/read/parseCells.js","name":"cells","original":{"line":11,"column":6},"generated":{"line":17,"column":18}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":11,"column":23},"generated":{"line":17,"column":23}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":11,"column":2},"generated":{"line":17,"column":24}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":11,"column":26},"generated":{"line":17,"column":26}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":12,"column":4},"generated":{"line":18,"column":4}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":12,"column":11},"generated":{"line":18,"column":11}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":12,"column":4},"generated":{"line":18,"column":13}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":84},"generated":{"line":19,"column":2}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":8,"column":84},"generated":{"line":19,"column":3}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":15,"column":2},"generated":{"line":19,"column":4}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":16,"column":2},"generated":{"line":20,"column":2}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":17,"column":2},"generated":{"line":21,"column":2}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":18,"column":2},"generated":{"line":22,"column":2}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":19,"column":2},"generated":{"line":23,"column":2}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":2}},{"source":"../../source/read/parseCells.js","name":"cells","original":{"line":21,"column":9},"generated":{"line":26,"column":9}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":21,"column":14},"generated":{"line":26,"column":14}},{"source":"../../source/read/parseCells.js","name":"map","original":{"line":21,"column":15},"generated":{"line":26,"column":15}},{"source":"../../source/read/parseCells.js","name":"cells","original":{"line":21,"column":9},"generated":{"line":26,"column":18}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":21,"column":19},"generated":{"line":26,"column":19}},{"source":"../../source/read/parseCells.js","name":"node","original":{"line":21,"column":20},"generated":{"line":26,"column":29}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":21,"column":19},"generated":{"line":26,"column":33}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":21,"column":29},"generated":{"line":26,"column":35}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":22,"column":4},"generated":{"line":27,"column":4}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":11}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":15}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":33}},{"source":"../../source/read/parseCells.js","name":"node","original":{"line":22,"column":21},"generated":{"line":27,"column":35}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":39}},{"source":"../../source/read/parseCells.js","name":"sheet","original":{"line":22,"column":27},"generated":{"line":27,"column":41}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":46}},{"source":"../../source/read/parseCells.js","name":"xml","original":{"line":22,"column":34},"generated":{"line":27,"column":48}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":51}},{"source":"../../source/read/parseCells.js","name":"values","original":{"line":22,"column":39},"generated":{"line":27,"column":53}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":59}},{"source":"../../source/read/parseCells.js","name":"styles","original":{"line":22,"column":47},"generated":{"line":27,"column":61}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":67}},{"source":"../../source/read/parseCells.js","name":"properties","original":{"line":22,"column":55},"generated":{"line":27,"column":69}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":79}},{"source":"../../source/read/parseCells.js","name":"options","original":{"line":22,"column":67},"generated":{"line":27,"column":81}},{"source":"../../source/read/parseCells.js","name":"parseCell","original":{"line":22,"column":11},"generated":{"line":27,"column":88}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":22,"column":4},"generated":{"line":27,"column":89}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":21,"column":9},"generated":{"line":28,"column":2}},{"source":"../../source/read/parseCells.js","name":"cells","original":{"line":21,"column":9},"generated":{"line":28,"column":3}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":21,"column":2},"generated":{"line":28,"column":4}},{"source":"../../source/read/parseCells.js","name":null,"original":{"line":24,"column":1},"generated":{"line":29,"column":0}}],"sources":{"../../source/read/parseCells.js":"import parseCell from './parseCell.js'\r\n\r\nimport {\r\n  getCells,\r\n  getMergedCells\r\n} from '../xml/xlsx.js'\r\n\r\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\r\n  const cells = getCells(sheet)\r\n\r\n  if (cells.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // const mergedCells = getMergedCells(sheet)\r\n  // for (const mergedCell of mergedCells) {\r\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\r\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\r\n  // }\r\n\r\n  return cells.map((node) => {\r\n    return parseCell(node, sheet, xml, values, styles, properties, options)\r\n  })\r\n}"},"lineCount":null}},"error":null,"hash":"8870d461f68989a843ca98410070c3d2","cacheData":{"env":{}}}